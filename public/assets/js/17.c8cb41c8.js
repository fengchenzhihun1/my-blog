(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1108:function(v,_,t){"use strict";t.r(_);var l=t(4),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"类图整体图"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#类图整体图"}},[v._v("#")]),v._v(" 类图整体图")]),v._v(" "),l("p",[l("img",{attrs:{src:t(588),alt:""}})]),v._v(" "),l("h2",{attrs:{id:"整体结构图概要"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#整体结构图概要"}},[v._v("#")]),v._v(" 整体结构图概要")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("实现")]),v._v(" "),l("p",[v._v("小汽车是车的实现类，用的是空心的类型加虚线，因为很虚所以用的虚线")])]),v._v(" "),l("li",[l("p",[v._v("泛化")]),v._v(" "),l("p",[v._v("泛化就是实现的意思")]),v._v(" "),l("p",[v._v("suv是小汽车的子类，suv继承了小汽车")])]),v._v(" "),l("li",[l("p",[v._v("依赖")]),v._v(" "),l("p",[v._v("自行车依赖学生（一般是用作参数）多用于运行时，可以动态进行变化，用的是带箭头的虚线")]),v._v(" "),l("p",[v._v("双向依赖是一种非常糟糕的结构，我们应该保持单向依赖杜绝双向依赖的产生")])]),v._v(" "),l("li",[l("p",[v._v("聚合")]),v._v(" "),l("p",[v._v("学生与班级的关系就是聚合")]),v._v(" "),l("p",[v._v("聚合是一种带空心菱形箭头的直线表示，表达的是A聚合到B上，或者说B由A组成")]),v._v(" "),l("p",[v._v("表示的是整体由部门构成，例如一个部门由多个员工组成")]),v._v(" "),l("p",[v._v("与组合关系不同的是，整体和部分不是强依赖的，即整体不存在了，部分依然存在；")])]),v._v(" "),l("li",[l("p",[v._v("组合关系")]),v._v(" "),l("p",[v._v("轮胎与小汽车的关系就是组合关系。是一个整体，不可分割")])]),v._v(" "),l("li",[l("p",[v._v("关联")]),v._v(" "),l("p",[v._v("直线，表示的是一种静态关系，是一种强关联。不强调方向，如果强调方向就是A知道B，B不知道A、通常对象通常是以成员变量的形式实现的。")])])]),v._v(" "),l("h2",{attrs:{id:"时序图"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#时序图"}},[v._v("#")]),v._v(" 时序图")]),v._v(" "),l("h3",{attrs:{id:"概念"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[v._v("#")]),v._v(" 概念")]),v._v(" "),l("p",[v._v("显示对象之间的交互细节，是显示对象之间交互的图。时序图中显示的是参与交互的对象及其对象之间消息交换的顺序。")]),v._v(" "),l("h3",{attrs:{id:"建模元素"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#建模元素"}},[v._v("#")]),v._v(" 建模元素")]),v._v(" "),l("p",[v._v("对象（Actor）、生命线（Lifeline）、控制焦点（Focus of control）、消息（Message）")]),v._v(" "),l("h2",{attrs:{id:"设计模式分类"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#设计模式分类"}},[v._v("#")]),v._v(" 设计模式分类")]),v._v(" "),l("ol",[l("li",[l("p",[v._v("创建型")]),v._v(" "),l("p",[v._v("对象的创建")]),v._v(" "),l("ul",[l("li",[v._v("单例")]),v._v(" "),l("li",[v._v("建造者")]),v._v(" "),l("li",[v._v("原型（克隆）")]),v._v(" "),l("li",[v._v("工厂")]),v._v(" "),l("li",[v._v("抽象工厂")])])]),v._v(" "),l("li",[l("p",[v._v("结构性")]),v._v(" "),l("p",[v._v("类和对象的组合")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("适配器")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("类适配器（使用继承的适配器）")]),v._v(" "),l("p",[v._v("目标对象")]),v._v(" "),l("p",[v._v("被适配者")]),v._v(" "),l("p",[v._v("适配器类")]),v._v(" "),l("p",[v._v("请求者")]),v._v(" "),l("p",[v._v("则适配器类只需要实现目标对象接口并继承被适配者类即可")])]),v._v(" "),l("li",[l("p",[v._v("对象适配器（使用委托的适配器）")]),v._v(" "),l("p",[v._v("适配器中持有被适配者对象")]),v._v(" "),l("p",[l("img",{attrs:{src:t(589),alt:""}})])])])]),v._v(" "),l("li",[l("p",[v._v("桥接")])]),v._v(" "),l("li",[l("p",[v._v("过滤器")])]),v._v(" "),l("li",[l("p",[v._v("组合")])]),v._v(" "),l("li",[l("p",[v._v("装饰器")])]),v._v(" "),l("li",[l("p",[v._v("外观")])]),v._v(" "),l("li",[l("p",[v._v("享元")])]),v._v(" "),l("li",[l("p",[v._v("代理")])])])]),v._v(" "),l("li",[l("p",[v._v("行为型")]),v._v(" "),l("p",[v._v("对象之间的通信")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("责任链")])]),v._v(" "),l("li",[l("p",[v._v("命令")])]),v._v(" "),l("li",[l("p",[v._v("解释器")])]),v._v(" "),l("li",[l("p",[v._v("迭代器")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("迭代器类图")]),v._v(" "),l("p",[l("img",{attrs:{src:t(590),alt:""}})])]),v._v(" "),l("li",[l("p",[v._v("迭代器的角色")]),v._v(" "),l("table",[l("thead",[l("tr",[l("th",[v._v("名字")]),v._v(" "),l("th",[v._v("说明")]),v._v(" "),l("th",[v._v("承担的角色")])])]),v._v(" "),l("tbody",[l("tr",[l("td",[v._v("Aggregate")]),v._v(" "),l("td",[v._v("集合的接口")]),v._v(" "),l("td",[v._v("集合")])]),v._v(" "),l("tr",[l("td",[v._v("Iterator")]),v._v(" "),l("td",[v._v("遍历集合的接口")]),v._v(" "),l("td",[v._v("迭代器")])]),v._v(" "),l("tr",[l("td",[v._v("Book")]),v._v(" "),l("td",[v._v("表示书的类")]),v._v(" "),l("td")]),v._v(" "),l("tr",[l("td",[v._v("BookShelt")]),v._v(" "),l("td",[v._v("表示书架的类")]),v._v(" "),l("td",[v._v("具体的集合")])]),v._v(" "),l("tr",[l("td",[v._v("BookSheltIterator")]),v._v(" "),l("td",[v._v("遍历书架的类")]),v._v(" "),l("td",[v._v("具体的迭代器")])]),v._v(" "),l("tr",[l("td",[v._v("Main")]),v._v(" "),l("td",[v._v("测试程序行为的类")]),v._v(" "),l("td")])])])]),v._v(" "),l("li",[l("p",[v._v("迭代器的优点")])])])])]),v._v(" "),l("p",[v._v("将遍历与实现就行分离")])])]),v._v(" "),l("ul",[l("li",[l("p",[v._v("中介者")])]),v._v(" "),l("li",[l("p",[v._v("备忘录")])]),v._v(" "),l("li",[l("p",[v._v("观察者")])]),v._v(" "),l("li",[l("p",[v._v("状态")])]),v._v(" "),l("li",[l("p",[v._v("空对象")])]),v._v(" "),l("li",[l("p",[v._v("策略")])]),v._v(" "),l("li",[l("p",[v._v("模板")])]),v._v(" "),l("li",[l("p",[v._v("访问者")])])]),v._v(" "),l("ol",{attrs:{start:"4"}},[l("li",[l("p",[v._v("J2EE模式")]),v._v(" "),l("ul",[l("li",[v._v("mvc")]),v._v(" "),l("li",[v._v("业务代表")]),v._v(" "),l("li",[v._v("数据访问对象")]),v._v(" "),l("li",[v._v("前段控制器")]),v._v(" "),l("li",[v._v("拦截过滤器")]),v._v(" "),l("li",[v._v("服务定位器")]),v._v(" "),l("li",[v._v("传输对象")])])])]),v._v(" "),l("p",[v._v("​")])])}),[],!1,null,null,null);_.default=i.exports},588:function(v,_,t){v.exports=t.p+"assets/img/UMLClassPic.bd44d275.png"},589:function(v,_,t){v.exports=t.p+"assets/img/20200303213953.1147255a.png"},590:function(v,_,t){v.exports=t.p+"assets/img/iterator.244ae18f.png"}}]);